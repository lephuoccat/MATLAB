clc
clear
% Import the folowing files:
% -----------------------
% positive_definite_mat.m
% clustering.m
% inverse_mat.m
% swap_mat.m
% -----------------------
% Iterate the experiment by 100 times
success_count = 0;
iteration = 100;
for k = 1:iteration
    % Input data
    n = 100;                 % Size of matrix nxn
    num_cluster = 20;        % Number of clusters
    const = n/num_cluster;
    Index = const*ones(1,num_cluster-1);
    for i = 2:(num_cluster-1)
        Index(i) = Index(i-1)+const;
    end
    % Create the random covariance matrix with 5 clusters
    A = positive_definite_mat(n,Index); 
%     A = [1.60249853e+00, -4.19590608e-01, -2.46659804e-02, -8.46327001e-02, -6.16725214e-02, -2.34375515e-02, 7.18029181e-02,  5.14178219e-02, -6.89964808e-02, 2.41257446e-02, -4.67638918e-03, -3.03442290e-03, ...
%          1.01663498e-01,  2.96132498e-02,  8.19069220e-03, ...
%          2.67193719e-03; ...
%        -4.19590608e-01,  2.16808561e+00, -3.45121835e-02, ...
%          1.45038075e-01,  2.20473475e-02,  6.25916754e-02, ...
%         -5.46907738e-02, -1.53089799e-02, -2.52739012e-03, ...
%         -8.72384202e-02, -3.96185195e-04, -2.43291321e-03, ...
%         -9.65978827e-02, -3.25600717e-02,  3.78813727e-02, ...
%          6.24063199e-02; ...
%        -2.46659804e-02, -3.45121835e-02,  2.32487409e+00, ...
%          7.95382271e-02,  1.36858965e-01,  3.59267197e-02, ...
%          5.78507268e-02,  1.16620166e-03,  7.43798105e-02, ...
%          3.69357821e-02, -3.92615204e-02, -1.35771941e-02, ...
%          5.23653351e-02,  2.97400817e-02, -9.77742735e-02, ...
%          3.53877270e-02; ...
%        -8.46327001e-02,  1.45038075e-01,  7.95382271e-02, ...
%          2.54736611e+00,  3.48240270e-02,  4.56862663e-02, ...
%          1.21189795e-01,  6.04254317e-02,  1.05697814e-03, ...
%          1.02290354e-02, -3.13856511e-03, -1.55413495e-02, ...
%         -7.83752321e-02,  2.12231829e-02,  3.81611184e-02, ...
%          1.03596688e-02; ...
%        -6.16725214e-02,  2.20473475e-02,  1.36858965e-01, ...
%          3.48240270e-02,  1.95420223e+00,  5.43805405e-01, ...
%         -6.80630679e-02, -5.18157074e-02,  2.23708162e-02, ...
%          3.76474873e-02, -1.13356089e-02,  1.38447345e-02, ...
%         -1.86518603e-02,  1.09457482e-01, -4.82471285e-02, ...
%          7.41906173e-02; ...
%        -2.34375515e-02,  6.25916754e-02,  3.59267197e-02, ...
%          4.56862663e-02,  5.43805405e-01,  1.84169226e+00, ...
%         -3.73315048e-02, -1.34765539e-01, -6.55670875e-02, ...
%          8.41871001e-02,  6.56394872e-02, -3.08535954e-02, ...
%         -2.33300470e-02,  1.21983440e-02, -7.56001914e-02, ...
%          1.16289413e-01; ...
%         7.18029181e-02, -5.46907738e-02,  5.78507268e-02, ...
%          1.21189795e-01, -6.80630679e-02, -3.73315048e-02, ...
%          2.80441952e+00,  1.64489051e+00, -4.81709310e-02, ...
%         -1.29927468e-01,  6.20561517e-02,  2.16296192e-02, ...
%          6.36709523e-02,  1.38187027e-01,  3.55115402e-02, ...
%         -5.19621217e-02; ...
%         5.14178219e-02, -1.53089799e-02,  1.16620166e-03, ...
%          6.04254317e-02, -5.18157074e-02, -1.34765539e-01, ...
%          1.64489051e+00,  2.91847700e+00, -2.75957815e-02, ...
%         -1.02931832e-01,  1.05326716e-01,  2.81336001e-02, ...
%          6.34510707e-03,  1.32774452e-01,  6.98136008e-02, ...
%         -5.07980610e-02; ...
%        -6.89964808e-02, -2.52739012e-03,  7.43798105e-02, ...
%          1.05697814e-03,  2.23708162e-02, -6.55670875e-02, ...
%         -4.81709310e-02, -2.75957815e-02,  1.31163313e+00, ...
%          2.45340910e-01,  2.65408774e-02,  1.85946582e-02, ...
%         -2.23868140e-02, -4.34750283e-02, -5.30073537e-02, ...
%          4.27198645e-02; ...
%         2.41257446e-02, -8.72384202e-02,  3.69357821e-02, ...
%          1.02290354e-02,  3.76474873e-02,  8.41871001e-02, ...
%         -1.29927468e-01, -1.02931832e-01,  2.45340910e-01, ...
%          1.61360994e+00,  2.65620313e-02, -4.60609376e-02, ...
%         -6.75880577e-02,  2.66556939e-02,  2.45509372e-02, ...
%         -8.51731523e-02; ...
%        -4.67638918e-03, -3.96185195e-04, -3.92615204e-02, ...
%         -3.13856511e-03, -1.13356089e-02,  6.56394872e-02, ...
%          6.20561517e-02,  1.05326716e-01,  2.65408774e-02, ...
%          2.65620313e-02,  1.60467409e+00, -3.66292398e-01, ...
%         -6.54258270e-02,  9.93716214e-02, -1.35907785e-02, ...
%         -5.59115875e-02; ...
%        -3.03442290e-03, -2.43291321e-03, -1.35771941e-02, ...
%         -1.55413495e-02,  1.38447345e-02, -3.08535954e-02, ...
%          2.16296192e-02,  2.81336001e-02,  1.85946582e-02, ...
%         -4.60609376e-02, -3.66292398e-01,  1.39323301e+00, ...
%          9.79434299e-02, -3.32261690e-02,  1.90943981e-03, ...
%          5.44751360e-02; ...
%         1.01663498e-01, -9.65978827e-02,  5.23653351e-02, ...
%         -7.83752321e-02, -1.86518603e-02, -2.33300470e-02, ...
%          6.36709523e-02,  6.34510707e-03, -2.23868140e-02, ...
%         -6.75880577e-02, -6.54258270e-02,  9.79434299e-02, ...
%          1.53993779e+00, -2.26622315e-01, -2.42037786e-02, ...
%          4.30264206e-03; ...
%         2.96132498e-02, -3.25600717e-02,  2.97400817e-02, ...
%          2.12231829e-02,  1.09457482e-01,  1.21983440e-02, ...
%          1.38187027e-01,  1.32774452e-01, -4.34750283e-02, ...
%          2.66556939e-02,  9.93716214e-02, -3.32261690e-02, ...
%         -2.26622315e-01,  1.43672219e+00, -7.24707403e-02, ...
%         -4.03729708e-02; ...
%         8.19069220e-03,  3.78813727e-02, -9.77742735e-02, ...
%          3.81611184e-02, -4.82471285e-02, -7.56001914e-02, ...
%          3.55115402e-02,  6.98136008e-02, -5.30073537e-02, ...
%          2.45509372e-02, -1.35907785e-02,  1.90943981e-03, ...
%         -2.42037786e-02, -7.24707403e-02,  1.31634263e+00, ...
%         -3.67005278e-01; ...
%         2.67193719e-03,  6.24063199e-02,  3.53877270e-02, ...
%          1.03596688e-02,  7.41906173e-02,  1.16289413e-01, ...
%         -5.19621217e-02, -5.07980610e-02,  4.27198645e-02, ...
%         -8.51731523e-02, -5.59115875e-02,  5.44751360e-02, ...
%          4.30264206e-03, -4.03729708e-02, -3.67005278e-01, ...
%          1.42990780e+00];

    origin_A = A;
    
    % Add random noise to the covariance matrix
    var_n = 10E-3;          % variance of noise
    N = rand(n,n);          % generate a random noise nxn matrix
    N = var_n*0.5*(N+N');   % symmetric N
    % N = normrnd(0,var_n,[n,n]);
    % N = abs(0.5*(N+N'));
    noisy_A = A + N;
    A = noisy_A;
    % lmax = max(eig(origin_A)); 
    % A = (lmax+1)*eye(n) - origin_A;
    
    % Randomly swap rows and columns
    index = 0;
    while index < 1000
        r = randi([1,n],1,2);
        A = swap_mat(A, r(1), r(2));
        index = index + 1;
    end
    mix_A = A;

    % Community Detection Algorithm
    count = 0;              % iteration count
    flag = 1;               % flag for the while loop
    penalty = 10E-6;        % penalty for clustering
    correct_flag = 0;
    while flag == 1
        [m,n] = size(A);
        % A_old: previous A with 1 community being clustered
        % A: the clustered community is taken out of A_old
        % flag: stop he while loop when size o clustering matrix is 1
        [A_old, A, flag, flag2] = clustering(A, n, const, penalty);
        count = count + 1;
        correct_flag = correct_flag + flag2;
        A_old;
    end
    fprintf("Number of cluster: %d\n", count-1);
    if (count-1 == num_cluster && correct_flag == num_cluster)
        % fprintf("Correct number of clusters & elements\n\n");
        success_count = success_count + 1;
    else
        % fprintf("Incorrect number of clusters/elements\n\n");
    end
end
fprintf("----------");
fprintf("\nNumber of success iterations: %d\n", success_count);
fprintf("Success Rate: %.2f\n", success_count/iteration*100);
